id: "CloudProviderRanker"
status_notcomplete: True   # values: status_complete, status_notcomplete, status_inprogress
tasks:
    parent:
        id: 3287
        progress: 78
    children:
        - name: "Repository synchronization"
          id: 3836 
          progress: 100
        - name: "Code style specification"
          id: 3839
          progress: 50
        - name: "Unit testing coverage"
          id: 3290
          progress: 65
        - name: "Functional and integration testing coverage"
          id: 3293
          progress: 100
        - name: "Configuration management"
          id: 3296
          progress: 100
        - name: "GitBook documentation"
          id: 3299
          progress: 50
repository: 
    url:
        - https://github.com/indigo-dc/CloudProviderRanker.git 
code_style:
    status_notcomplete: True
    standard:
        - java_google
    exceptions: 0
    jenkins_job:
        - cloudproviderranker-codestyle
    comments:
        - "Progress is set to 50\\%: code style is defined but the current code is not compliant with it."
unit_test:
    coverage: 70
    jenkins_job: 
        - cloudproviderranker-unittest
func_int_test:
    jenkins_job:
        - cloudproviderranker-functional
    comments:
        - "Jenkins job creates the JAR file for testing the functionalities documented in \\href{https://indigo-dc.gitbooks.io/cloud-provider-ranker/content/chapter1.html}{GitBook}."
        - "Will get the report from https://indigo-dc.gitbooks.io/cloud-provider-ranker/content/chapter1.html"
    url_external: # links to external CIs
gitbook:
    url: https://indigo-dc.gitbooks.io/cloud-provider-ranker/content/
    types:
        - Readme
        - Deployment/user documentation
    comments:
        - "Points to improve in the documentation\\begin{itemize}\\item Align documentation sections to the ones defined in https://project.indigo-datacloud.eu/projects/wp3/wiki/Extensions\\_to\\_SQA\\#User-Documentation; in case you need to add different sections, do it at the end. \\item README \\begin{itemize} \\item Explain the interactions with other INDIGO components, whether this is a microservice to be deployed together with the orchestrator? \\item Describe where to deploy it (site service, central infrastructure service serving multiple communities, or a service to be maintained by each individual user community) \\end{itemize} \\item Deployment guide \\begin{itemize} \\item Building from source: add command/s to build the JAR \\item Installing from packages: add command/s to install the JAR from INDIGO repositories to INDIGO, both for CentOS7 and Ubuntu 14.04 \\item Deployment using Docker: add a reference to dockerhub's indigodatacloud/cloudproviderranker repository \\item Other considerations: \\begin{itemize} \\item Identify the TCP ports that need to be exposed and to which services \\item Provide information on how to configure the ranking, this should be simple to understand examples, the information in the ranking algorithm section is too dense and difficult to follow for this purpose. \\item Not clear how to implement a monitoring metric, how to obtain the monitoring information ? from where ? \\item Reference to https://goo.gl/GZnl8 in ranking algorithm, please put this information inside the help (other subsection, annex) and not as external document \\end{itemize} \\end{itemize} \\end{itemize}"
config_management:
    wont_be_provided: True
    comments:
        - "Configuration for CloudProviderRanker server is trivial: zero configuration, or NO configuration at all (puppet or other). It can be launched without any configuration but the editing of two support files in json notation that define weights and priorities used by the internal engine rule."
    tool:   # e.g. ansible, ..
    url:
    level:  # values: installation, configuration, installation/configuration
    jenkins_job:
    build:
        - version: Ubuntu 14.04 LTS
          successful:   # True, False
          url:
        - version: CentOS7
          successful:   # True, False
          url:
